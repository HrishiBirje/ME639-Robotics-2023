import numpy as np

def Jacobian_3R(theta1,theta2,theta3,l1,l2,l3):
    J = np.zeros((3,3))
    J[0,0] = -l1*np.sin(theta1)-l2*np.sin(theta1+theta2)-l3*np.sin(theta1+theta2+theta3)
    J[0,1] = -l2*np.sin(theta1+theta2)-l3*np.sin(theta1+theta2+theta3)
    J[0,2] = -l3*np.sin(theta1+theta2+theta3)
    J[1,0] = l1*np.cos(theta1)+l2*np.cos(theta1+theta2)+l3*np.cos(theta1+theta2+theta3)
    J[1,1] = l2*np.cos(theta1+theta2)+l3*np.cos(theta1+theta2+theta3)
    J[1,2] = l3*np.cos(theta1+theta2+theta3)
    J[2,0] = 0
    J[2,1] = 0
    J[2,2] = 0
    return J
